var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.415,1,1]],["body/components/AppComponent.html",[0,0.692,1,1.212,2,0.543,3,0.446,4,1.299,5,1.299,6,0.806,7,0.583,8,1.002,9,2.027,10,1.585,11,1.299,12,3.156,13,2.435,14,1.472,15,2.054,16,2.054,17,2.054,18,2.054,19,0.81,20,1.275,21,2.897,22,2.589,23,2.897,24,2.897,25,2.897,26,1.044,27,2.255,28,2.054,29,2.054,30,2.054,31,2.054,32,2.054,33,2.054,34,2.054,35,2.054,36,2.054,37,2.054,38,2.054,39,2.054,40,1.299,41,3.122,42,1.751,43,1.299,44,4.145,45,2.434,46,2.549,47,1.585,48,1.85,49,0.806,50,1.299,51,2.027,52,1.966,53,1.002,54,0.072,55,2.235,56,1.585,57,1.299,58,1.299,59,2.897,60,1.002,61,1.585,62,2.434,63,2.435,64,2.057,65,0.078,66,1.78,67,1.54,68,2.083,69,1.798,70,1.299,71,2.027,72,2.544,73,2.054,74,1.786,75,1.299,76,2.054,77,2.435,78,1.798,79,1.585,80,3.753,81,2.386,82,2.054,83,1.299,84,2.054,85,2.544,86,2.812,87,1.585,88,1.585,89,1.706,90,1.585,91,2.054,92,2.897,93,2.054,94,2.054,95,2.054,96,1.299,97,1.299,98,1.966,99,2.897,100,1.299,101,1.299,102,2.235,103,1.585,104,1.299,105,1.299,106,2.054,107,2.054,108,1.002,109,1.002,110,1.585,111,0.806,112,0.806,113,1.299,114,1.299,115,2.083,116,1.299,117,1.002,118,1.299,119,0.706,120,0.574,121,1.299,122,1.299,123,1.299,124,1.582,125,1.002,126,1.299,127,1.585,128,1.798,129,1.275,130,1.299,131,3.357,132,1.002,133,1.299,134,1.002,135,1.299,136,1.299,137,1.966,138,1.275,139,1.275,140,1.002,141,0.543,142,1.002,143,1.002,144,0.806,145,0.66,146,1.299,147,1.299,148,1.299,149,1.002,150,1.299,151,1.299,152,2.897,153,1.966,154,2.589,155,1.299,156,2.589,157,2.549,158,2.235,159,2.549,160,2.182,161,3.645,162,1.299,163,1.299,164,1.299,165,1.585,166,1.299,167,1.299,168,0.806,169,1.299,170,1.299,171,2.054,172,2.549,173,0.806,174,1.299,175,1.299,176,1.585,177,1.299,178,1.299,179,1.299,180,1.002,181,1.299,182,0.806,183,1.002,184,1.299,185,1.299,186,2.235,187,1.299,188,1.299,189,1.299,190,1.299,191,1.002,192,0.806,193,1.299,194,1.604,195,2.054,196,2.549,197,1.299,198,1.798,199,2.054,200,1.275,201,0.859,202,1.299,203,1.044,204,1.604,205,1.299,206,2.054,207,2.054,208,1.299,209,1.966,210,1.64,211,1.044,212,1.275,213,0.806,214,0.66,215,0.859,216,1.044,217,0.806,218,1.002,219,1.002,220,1.002,221,0.806,222,0.66,223,1.299,224,1.585,225,1.044,226,0.363,227,1.299,228,1.002,229,0.446,230,0.167,231,1.299,232,1.275,233,2.712,234,1.299,235,1.275,236,1.299,237,1.299,238,0.446,239,0.806,240,1.706,241,2.549,242,2.435,243,2.549,244,1.002,245,0.543,246,1.706,247,1.299,248,1.299,249,1.299,250,1.299,251,1.002,252,1.002,253,0.543,254,0.806,255,1.585,256,2.054,257,1.299,258,1.299,259,1.299,260,1.299,261,0.033]],["title/modules/AppModule.html",[262,1,263,1.215]],["body/modules/AppModule.html",[1,1.929,2,1.151,3,0.946,7,0.478,54,0.057,65,0.079,120,0.769,194,2.208,204,2.208,209,2.722,210,1.965,212,1.709,213,2.19,214,1.399,219,2.123,220,2.123,226,0.986,229,1.212,230,0.355,238,0.946,254,1.709,261,0.057,262,1.476,263,2.331,264,3.004,265,3.004,266,2.123,267,2.123,268,2.123,269,2.722,270,2.123,271,1.399,272,2.753,273,3.529,274,3.529,275,3.529,276,2.123,277,2.753,278,2.123,279,3.529,280,2.753,281,3.529,282,2.753,283,3.529,284,2.722,285,3.529,286,2.753,287,3.529,288,2.753,289,3.529,290,2.753,291,3.529,292,2.753,293,3.529,294,3.529,295,3.529,296,2.753,297,3.529,298,2.753,299,2.753]],["title/classes/ClusterMatch.html",[230,0.308,300,1.484]],["body/classes/ClusterMatch.html",[0,0.227,2,0.546,3,1.507,6,1.588,7,0.227,9,1.477,10,1.592,14,1.956,19,0.365,20,1.804,22,3.201,26,1.049,27,1.911,42,1.695,45,1.281,47,1.592,48,1.782,49,1.281,51,2.248,52,1.592,54,0.075,61,2.9,62,2.479,63,2.242,64,1.608,65,0.079,66,1.573,67,1.439,68,1.3,71,2.129,72,1.588,74,2.273,77,1.973,78,1.964,79,3.126,81,1.281,85,1.804,89,1.3,102,1.007,111,1.281,112,1.964,115,1.281,119,0.998,120,1.116,124,1.281,134,1.592,138,1.281,139,1.281,141,0.863,145,1.049,153,1.007,160,1.588,176,1.007,201,0.863,203,2.085,210,1.216,211,1.049,215,0.863,217,0.811,218,1.007,224,1.592,225,1.3,226,1.021,229,0.449,230,0.266,235,1.804,238,0.709,239,0.811,240,0.664,245,0.863,246,1.856,253,0.546,261,0.034,278,1.007,300,2.088,301,1.007,302,4.407,303,2.064,304,1.592,305,2.064,306,2.064,307,3.165,308,2.064,309,1.281,310,1.592,311,1.804,312,2.064,313,2.064,314,1.973,315,2.064,316,1.592,317,2.907,318,2.907,319,2.907,320,2.907,321,2.907,322,2.558,323,2.907,324,2.907,325,2.064,326,2.064,327,2.064,328,2.064,329,2.064,330,2.441,331,2.907,332,2.064,333,1.281,334,1.306,335,2.242,336,2.595,337,3.029,338,3.201,339,1.973,340,2.064,341,1.306,342,1.306,343,1.306,344,1.306,345,3.365,346,3.653,347,1.306,348,1.588,349,1.306,350,2.064,351,1.306,352,1.281,353,2.718,354,1.049,355,1.592,356,1.592,357,1.281,358,1.973,359,2.064,360,2.558,361,2.064,362,1.306,363,2.441,364,1.306,365,1.306,366,1.306,367,2.064,368,1.306,369,1.281,370,2.064,371,1.306,372,1.007,373,2.558,374,1.306,375,1.306,376,3.165,377,1.306,378,2.558,379,1.007,380,1.306,381,0.664,382,2.064,383,1.306,384,2.064,385,1.306,386,2.064,387,2.064,388,1.306,389,1.306,390,2.064,391,1.306,392,1.007,393,2.558,394,1.306,395,1.007,396,1.306,397,1.3,398,1.306,399,1.306,400,2.558,401,2.558,402,0.811,403,2.064,404,1.306,405,1.306,406,1.306,407,1.306,408,1.306,409,1.588,410,0.811,411,1.306,412,1.306,413,1.306,414,1.306,415,1.306,416,1.007,417,1.306,418,1.306,419,1.306,420,1.306,421,1.007,422,1.306,423,1.306,424,1.306,425,1.306,426,2.558,427,2.558,428,1.306,429,1.306,430,1.306,431,1.306,432,1.306,433,1.306,434,1.306,435,1.306,436,1.306]],["title/classes/Extras.html",[216,1.215,230,0.308]],["body/classes/Extras.html",[0,0.55,2,0.977,3,0.802,7,0.668,9,1.186,14,1.186,19,0.652,26,1.608,27,1.608,42,1.736,54,0.052,64,2.109,65,0.079,66,1.736,67,0.802,68,2.109,69,1.449,71,2.157,72,2.229,74,1.825,85,1.965,119,0.802,120,0.885,141,1.611,144,1.965,154,2.441,160,2.229,165,2.441,168,1.965,182,1.449,186,1.801,198,1.965,203,1.186,210,1.324,216,1.608,221,1.449,222,1.186,226,0.885,229,1.234,230,0.518,232,2.827,245,1.324,246,2.045,253,0.977,261,0.052,352,1.965,372,2.441,409,1.449,410,1.449,437,1.801,438,2.441,439,2.97,440,2.441,441,3.165,442,3.165,443,3.165,444,2.441,445,2.441,446,3.85,447,3.165,448,2.441,449,3.165,450,2.441,451,3.165,452,3.165,453,3.165,454,3.165,455,3.165,456,3.591,457,3.591,458,3.165,459,3.165,460,2.335,461,2.335,462,2.335,463,2.335,464,3.165,465,2.335,466,2.335,467,2.335,468,2.335,469,3.165,470,2.335,471,2.335,472,3.85,473,2.335,474,3.85,475,3.85,476,3.165,477,2.335,478,4.15,479,2.335,480,2.335,481,1.965,482,2.335,483,2.335,484,3.165,485,2.335,486,2.335,487,2.335,488,2.335,489,2.335,490,2.335,491,2.335,492,3.165,493,2.335,494,3.165,495,2.335,496,2.335,497,2.335,498,2.335,499,2.335,500,2.335,501,2.335,502,3.165]],["title/classes/Utils.html",[215,1,230,0.308]],["body/classes/Utils.html",[0,0.498,2,0.39,3,0.32,7,0.556,9,1.693,14,1.627,19,0.664,20,1.987,26,0.796,27,1.207,41,3.507,42,1.48,48,1.642,51,2.266,53,0.718,54,0.025,55,1.208,56,1.208,60,0.718,64,1.693,65,0.079,66,1.547,67,1.144,68,1.693,69,1.474,71,2.105,74,2.328,81,0.972,86,1.832,87,1.208,88,1.208,89,1.943,90,2.47,98,1.208,103,1.832,110,1.832,115,2.49,117,1.208,119,0.538,120,0.989,127,1.208,128,0.578,129,0.972,132,0.718,137,1.832,138,1.781,140,2.852,141,0.993,142,1.563,143,1.208,144,0.972,145,1.207,149,0.718,173,0.972,180,2.213,183,1.208,191,2.213,192,0.972,200,1.257,201,1.276,203,1.627,210,0.847,211,0.796,215,0.993,221,0.578,222,0.473,225,0.473,226,0.664,229,0.32,230,0.306,232,2.572,235,2.196,240,0.473,245,0.39,246,2.018,251,0.718,252,0.718,253,1.48,255,1.208,261,0.025,309,1.474,310,1.832,314,0.718,330,1.208,333,2.136,335,2.903,336,2.569,337,2.043,348,1.644,352,1.781,353,2.043,354,1.029,355,2.213,357,1.644,358,0.718,369,1.474,379,2.043,381,1.913,395,2.729,397,1.841,402,0.972,409,1.257,410,0.972,416,0.718,421,2.794,438,1.208,481,0.972,503,0.718,504,1.566,505,1.566,506,3.05,507,1.566,508,1.566,509,1.566,510,2.213,511,1.566,512,3.442,513,1.566,514,3.698,515,0.931,516,3.028,517,2.375,518,2.375,519,1.832,520,1.832,521,2.026,522,1.566,523,1.566,524,2.649,525,0.931,526,1.832,527,3.331,528,2.649,529,3.05,530,1.566,531,2.869,532,1.566,533,0.931,534,3.05,535,3.764,536,0.931,537,2.353,538,0.931,539,0.931,540,2.026,541,2.375,542,0.931,543,0.931,544,1.566,545,1.566,546,1.566,547,0.931,548,0.931,549,0.931,550,1.566,551,0.931,552,1.566,553,1.566,554,1.208,555,3.538,556,1.566,557,1.566,558,1.566,559,1.566,560,1.566,561,2.026,562,3.538,563,1.566,564,1.566,565,1.832,566,1.566,567,0.931,568,1.566,569,0.931,570,2.869,571,0.931,572,3.202,573,0.931,574,0.931,575,0.931,576,3.623,577,2.026,578,2.649,579,0.931,580,0.931,581,3.202,582,0.931,583,1.566,584,1.566,585,0.931,586,2.026,587,2.649,588,0.931,589,0.931,590,0.931,591,2.375,592,2.375,593,2.026,594,0.931,595,1.566,596,0.931,597,0.931,598,0.931,599,1.566,600,3.442,601,2.649,602,1.566,603,1.566,604,1.566,605,1.566,606,1.566,607,1.566,608,1.566,609,2.375,610,1.566,611,1.566,612,0.931,613,2.375,614,2.375,615,3.202,616,1.566,617,1.566,618,0.931,619,3.331,620,0.931,621,0.931,622,0.931,623,0.931,624,0.931,625,0.931,626,2.375,627,3.331,628,1.566,629,2.649,630,2.026,631,0.931,632,3.202,633,0.718,634,0.931,635,0.931,636,0.931,637,0.931,638,0.931,639,2.375,640,0.931,641,0.931,642,0.931,643,2.869,644,1.832,645,0.578,646,0.718,647,0.931,648,0.931,649,0.931,650,2.026,651,0.931,652,0.931,653,0.931,654,0.931,655,0.931,656,0.931,657,0.931,658,0.931,659,0.931,660,0.718,661,0.931,662,0.931,663,0.931,664,0.931,665,0.931,666,2.026,667,0.931,668,0.931,669,0.931,670,0.931,671,0.931,672,0.931,673,0.931,674,0.931,675,1.566,676,0.931,677,0.931,678,0.718,679,0.931,680,0.718,681,0.931,682,1.566,683,0.931,684,0.718,685,0.931,686,0.931,687,0.931,688,2.375,689,0.931,690,1.566,691,0.931,692,0.931,693,1.566,694,0.931,695,0.931,696,0.931,697,0.718,698,1.566,699,1.566,700,0.931,701,0.931,702,0.931,703,0.931,704,0.931,705,0.931,706,0.931,707,0.931,708,0.931,709,0.931,710,0.931,711,0.931]],["title/coverage.html",[712,2.481]],["body/coverage.html",[0,0.728,1,1.356,7,0.563,8,2.5,48,1.356,54,0.064,65,0.077,67,1.114,119,1.114,194,1.647,204,1.647,215,1.356,216,1.647,230,0.561,253,1.821,261,0.064,300,2.012,301,2.5,311,2.012,354,1.647,437,2.5,503,2.5,712,2.5,713,2.5,714,3.242,715,4.353,716,3.242,717,3.242,718,3.242,719,3.242,720,3.242,721,3.242,722,3.242,723,3.242,724,3.242,725,3.242,726,3.242,727,3.242,728,3.242,729,2.5,730,2.701,731,3.013,732,4.353,733,2.5,734,3.013,735,2.5,736,3.242,737,3.242]],["title/dependencies.html",[238,0.984,554,1.558]],["body/dependencies.html",[7,0.569,54,0.064,65,0.078,211,1.998,212,2.033,213,2.44,214,1.998,222,1.665,238,1.125,261,0.064,276,2.527,284,2.527,481,2.033,510,2.527,633,2.527,738,3.276,739,3.276,740,3.276,741,3.931,742,3.276,743,4.586,744,3.276,745,3.276,746,3.276,747,3.276,748,3.276,749,3.276,750,3.276,751,3.276,752,3.276,753,3.276,754,3.276,755,3.276,756,3.276,757,3.276,758,3.931,759,3.276,760,3.276,761,3.276,762,3.276,763,3.276]],["title/miscellaneous/enumerations.html",[764,1.027,765,2.209]],["body/miscellaneous/enumerations.html",[0,0.559,6,2.804,19,0.9,42,1.627,48,1.346,51,1.636,54,0.063,62,1.998,65,0.063,78,1.998,89,2.259,108,2.483,111,1.998,112,1.998,124,1.998,125,2.483,198,1.998,201,1.749,217,2.414,225,1.636,239,2.414,240,1.636,244,3,245,1.749,261,0.063,304,2.483,309,1.998,333,1.998,338,2.483,339,2.483,348,1.998,354,1.636,356,2.483,357,1.998,363,2.483,369,1.998,397,1.636,445,2.483,516,2.483,519,2.483,526,2.483,565,2.483,644,2.483,645,1.998,678,2.483,684,2.483,697,2.483,764,1.636,765,2.483,766,3.219,767,3.219,768,3.219,769,3.219,770,3.219,771,3.219,772,3.89,773,3.219,774,3.219,775,2.483,776,3.219,777,3.219,778,3.219,779,3.89]],["title/index.html",[19,0.565,381,1.027,780,1.558]],["body/index.html",[0,0.719,3,1.081,7,0.546,13,2.428,45,1.954,54,0.062,65,0.062,66,1.317,119,1.081,120,1.157,128,2.675,139,1.954,158,3.324,261,0.062,271,1.599,316,2.428,392,2.428,439,2.428,680,2.428,781,3.148,782,3.837,783,4.14,784,4.14,785,3.148,786,3.148,787,3.837,788,4.549,789,4.549,790,3.148,791,3.148,792,3.148,793,3.148,794,3.148,795,3.148,796,3.148,797,3.148,798,4.418,799,3.148,800,3.148,801,3.148,802,3.148,803,3.148,804,2.428,805,3.837,806,4.418,807,3.837,808,3.837,809,3.148,810,3.148,811,3.148,812,4.14,813,3.148,814,3.148,815,3.148]],["title/license.html",[381,1.027,450,1.558,780,1.558]],["body/license.html",[7,0.548,49,1.96,54,0.063,65,0.063,109,3.198,120,1.075,129,1.96,141,1.321,156,2.436,173,2.387,182,2.573,192,1.96,226,0.883,228,2.966,261,0.063,271,1.605,402,1.96,440,2.436,444,2.436,448,2.436,520,2.436,537,2.436,660,2.436,713,2.436,775,2.436,816,4.146,817,3.158,818,3.158,819,3.158,820,3.845,821,3.158,822,3.158,823,3.158,824,3.158,825,3.845,826,4.314,827,4.628,828,3.158,829,3.845,830,3.158,831,3.158,832,3.158,833,3.158,834,3.158,835,3.158,836,3.158,837,3.158,838,3.158,839,3.158,840,3.845,841,3.158,842,3.158,843,3.845,844,3.158,845,3.158,846,3.158,847,3.158,848,3.158,849,3.158,850,3.158,851,3.158,852,3.158,853,3.158,854,3.158,855,3.158,856,3.158,857,3.158,858,3.158]],["title/modules.html",[262,1.346]],["body/modules.html",[54,0.069,65,0.069,168,2.29,214,1.875,261,0.069,262,1.543,263,1.875,859,3.689,860,3.689]],["title/overview.html",[861,2.481]],["body/overview.html",[0,0.592,1,1.934,54,0.066,65,0.075,194,2.177,204,2.177,226,0.953,229,1.171,230,0.439,238,1.171,254,2.116,261,0.066,262,1.684,263,2.38,264,2.63,265,2.63,266,2.63,267,2.63,268,2.63,269,3.105,270,2.63,271,1.732,397,1.732,645,2.116,646,2.63,861,2.63]],["title/miscellaneous/variables.html",[730,1.777,764,1.027]],["body/miscellaneous/variables.html",[19,0.944,54,0.065,65,0.077,67,1.466,145,2.242,200,2.649,201,1.785,233,2.606,242,3.088,261,0.065,311,2.649,729,2.606,730,2.097,731,3.523,733,2.606,734,2.606,735,3.291,764,1.717,804,3.088,862,4.004,863,3.378,864,3.378,865,3.378,866,3.378]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["0,1",{"_index":545,"title":{},"body":{"classes/Utils.html":{}}}],["0.0",{"_index":626,"title":{},"body":{"classes/Utils.html":{}}}],["0.1.7",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["0.16",{"_index":611,"title":{},"body":{"classes/Utils.html":{}}}],["0.36",{"_index":609,"title":{},"body":{"classes/Utils.html":{}}}],["0.52",{"_index":607,"title":{},"body":{"classes/Utils.html":{}}}],["0.9.1",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":650,"title":{},"body":{"classes/Utils.html":{}}}],["1",{"_index":397,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1)[0",{"_index":413,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["1.0",{"_index":639,"title":{},"body":{"classes/Utils.html":{}}}],["1.3.0",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["1.3.8",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":644,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["2.5.4",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":817,"title":{},"body":{"license.html":{}}}],["27/27",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":645,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["34/36",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["36/37",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["360.0",{"_index":634,"title":{},"body":{"classes/Utils.html":{}}}],["4",{"_index":646,"title":{},"body":{"classes/Utils.html":{},"overview.html":{}}}],["5",{"_index":647,"title":{},"body":{"classes/Utils.html":{}}}],["5.4.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":785,"title":{},"body":{"index.html":{}}}],["6.10.2",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["94",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["97",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["_canva",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["_color",{"_index":317,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["_dendrogram",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["_equalbranch",{"_index":318,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["_interfac",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["_label",{"_index":319,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["_sourcenod",{"_index":320,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["_targetnod",{"_index":321,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["_titl",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["a.data[properti",{"_index":621,"title":{},"body":{"classes/Utils.html":{}}}],["abov",{"_index":839,"title":{},"body":{"license.html":{}}}],["access",{"_index":345,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["accord",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["achromat",{"_index":631,"title":{},"body":{"classes/Utils.html":{}}}],["action",{"_index":854,"title":{},"body":{"license.html":{}}}],["actual",{"_index":419,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["actual_compon",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["ad",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["add",{"_index":409,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["adx.x1",{"_index":610,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x1':0.3647867,'adx.x3':0.3647867):0.165399",{"_index":617,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x2",{"_index":608,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x2':0.52,('adx.x1':0.36,'adx.x3':0.36):0.16",{"_index":604,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x2':0.5301862",{"_index":616,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x3",{"_index":664,"title":{},"body":{"classes/Utils.html":{}}}],["adx.x3clearli",{"_index":612,"title":{},"body":{"classes/Utils.html":{}}}],["algorithm",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["allow",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["alphabet",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["alway",{"_index":659,"title":{},"body":{"classes/Utils.html":{}}}],["amount",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["and/or",{"_index":833,"title":{},"body":{"license.html":{}}}],["anf",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["angl",{"_index":579,"title":{},"body":{"classes/Utils.html":{}}}],["angular",{"_index":783,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expans",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.compon",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":528,"title":{},"body":{"classes/Utils.html":{}}}],["appendcss",{"_index":455,"title":{},"body":{"classes/Extras.html":{}}}],["appendcss(csstext",{"_index":460,"title":{},"body":{"classes/Extras.html":{}}}],["appli",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["applic",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["appmodul",{"_index":263,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":857,"title":{},"body":{"license.html":{}}}],["around",{"_index":573,"title":{},"body":{"classes/Utils.html":{}}}],["arr",{"_index":464,"title":{},"body":{"classes/Extras.html":{}}}],["array",{"_index":581,"title":{},"body":{"classes/Utils.html":{}}}],["artifact",{"_index":799,"title":{},"body":{"index.html":{}}}],["associ",{"_index":660,"title":{},"body":{"classes/Utils.html":{},"license.html":{}}}],["author",{"_index":440,"title":{},"body":{"classes/Extras.html":{},"license.html":{}}}],["automat",{"_index":794,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":305,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["axi",{"_index":575,"title":{},"body":{"classes/Utils.html":{}}}],["b",{"_index":514,"title":{},"body":{"classes/Utils.html":{}}}],["b.data[properti",{"_index":622,"title":{},"body":{"classes/Utils.html":{}}}],["b.tostring(16)).slic",{"_index":657,"title":{},"body":{"classes/Utils.html":{}}}],["base",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["bb",{"_index":656,"title":{},"body":{"classes/Utils.html":{}}}],["be",{"_index":678,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["begin",{"_index":532,"title":{},"body":{"classes/Utils.html":{}}}],["best",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["bioisomorph",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["biolog",{"_index":768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bl.ock",{"_index":453,"title":{},"body":{"classes/Extras.html":{}}}],["boolean",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{}}}],["bootstrap",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["both",{"_index":339,"title":{},"body":{"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["botton",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["bound",{"_index":669,"title":{},"body":{"classes/Utils.html":{}}}],["bracket",{"_index":693,"title":{},"body":{"classes/Utils.html":{}}}],["branch",{"_index":338,"title":{},"body":{"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["break",{"_index":643,"title":{},"body":{"classes/Utils.html":{}}}],["brows",{"_index":860,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":798,"title":{},"body":{"index.html":{}}}],["button",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":502,"title":{},"body":{"classes/Extras.html":{}}}],["c:number",{"_index":624,"title":{},"body":{"classes/Utils.html":{}}}],["calcul",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["call",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["callback",{"_index":476,"title":{},"body":{"classes/Extras.html":{}}}],["canva",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{}}}],["canvas'},{'nam",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["canvas/canvas.compon",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["canvascompon",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["captur",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["case",{"_index":632,"title":{},"body":{"classes/Utils.html":{}}}],["chang",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"index.html":{}}}],["char",{"_index":524,"title":{},"body":{"classes/Utils.html":{}}}],["char:str",{"_index":623,"title":{},"body":{"classes/Utils.html":{}}}],["charact",{"_index":527,"title":{},"body":{"classes/Utils.html":{}}}],["charg",{"_index":824,"title":{},"body":{"license.html":{}}}],["check",{"_index":392,"title":{},"body":{"classes/ClusterMatch.html":{},"index.html":{}}}],["child",{"_index":615,"title":{},"body":{"classes/Utils.html":{}}}],["children",{"_index":562,"title":{},"body":{"classes/Utils.html":{}}}],["chromat",{"_index":633,"title":{},"body":{"classes/Utils.html":{},"dependencies.html":{}}}],["claim",{"_index":851,"title":{},"body":{"license.html":{}}}],["class",{"_index":230,"title":{"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"overview.html":{}}}],["classifi",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["clearli",{"_index":665,"title":{},"body":{"classes/Utils.html":{}}}],["cli",{"_index":784,"title":{},"body":{"index.html":{}}}],["click",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["cline",{"_index":781,"title":{},"body":{"index.html":{}}}],["close",{"_index":692,"title":{},"body":{"classes/Utils.html":{}}}],["cluster",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodul",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["clustermatch",{"_index":300,"title":{"classes/ClusterMatch.html":{}},"body":{"classes/ClusterMatch.html":{},"coverage.html":{}}}],["clustermatchenum",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["clustermatchenum.bioisomorph",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["clustermatchenum.contain",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["clustermatchtyp",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["code",{"_index":439,"title":{},"body":{"classes/Extras.html":{},"index.html":{}}}],["color",{"_index":336,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["colour",{"_index":346,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["comma",{"_index":600,"title":{},"body":{"classes/Utils.html":{}}}],["commas:numb",{"_index":671,"title":{},"body":{"classes/Utils.html":{}}}],["compar",{"_index":309,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["comparenod",{"_index":505,"title":{},"body":{"classes/Utils.html":{}}}],["comparenodes(a",{"_index":513,"title":{},"body":{"classes/Utils.html":{}}}],["comparison",{"_index":519,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["complement",{"_index":420,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["complet",{"_index":371,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["components.push(rawtex",{"_index":708,"title":{},"body":{"classes/Utils.html":{}}}],["components.push(rawtex.substring(0",{"_index":702,"title":{},"body":{"classes/Utils.html":{}}}],["condit",{"_index":838,"title":{},"body":{"license.html":{}}}],["connect",{"_index":858,"title":{},"body":{"license.html":{}}}],["consecut",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["consid",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["construct",{"_index":380,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["constructor",{"_index":327,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["constructor(sourc",{"_index":328,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["contain",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["contains(str",{"_index":463,"title":{},"body":{"classes/Extras.html":{}}}],["content",{"_index":563,"title":{},"body":{"classes/Utils.html":{}}}],["context",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":313,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["contract",{"_index":855,"title":{},"body":{"license.html":{}}}],["convent",{"_index":548,"title":{},"body":{"classes/Utils.html":{}}}],["coordin",{"_index":572,"title":{},"body":{"classes/Utils.html":{}}}],["copi",{"_index":826,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":816,"title":{},"body":{"license.html":{}}}],["core",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":416,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["count",{"_index":506,"title":{},"body":{"classes/Utils.html":{}}}],["count(st",{"_index":523,"title":{},"body":{"classes/Utils.html":{}}}],["coverag",{"_index":712,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["criteria",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["cross",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["cssstyletext",{"_index":484,"title":{},"body":{"classes/Extras.html":{}}}],["csstext",{"_index":462,"title":{},"body":{"classes/Extras.html":{}}}],["current",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["currentindex",{"_index":688,"title":{},"body":{"classes/Utils.html":{}}}],["currentindex:numb",{"_index":685,"title":{},"body":{"classes/Utils.html":{}}}],["cutoff",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["d3",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["d3'",{"_index":556,"title":{},"body":{"classes/Utils.html":{}}}],["damag",{"_index":852,"title":{},"body":{"license.html":{}}}],["data",{"_index":521,"title":{},"body":{"classes/Utils.html":{}}}],["deal",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["decid",{"_index":677,"title":{},"body":{"classes/Utils.html":{}}}],["declar",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["definit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["dendrogram",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["depend",{"_index":238,"title":{"dependencies.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"dependencies.html":{},"overview.html":{}}}],["descendat",{"_index":679,"title":{},"body":{"classes/Utils.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["dev",{"_index":791,"title":{},"body":{"index.html":{}}}],["develop",{"_index":786,"title":{},"body":{"index.html":{}}}],["diff",{"_index":359,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgessearch",{"_index":426,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgessearch.filter(edg",{"_index":432,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgessearch.push(ele.parent.data[\"id\"]+ele.data[\"id",{"_index":429,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgestarget",{"_index":427,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgestarget.filter(edg",{"_index":434,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["diffedgestarget.push(ele.parent.data[\"id\"]+ele.data[\"id",{"_index":431,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["differ",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["dimensino",{"_index":577,"title":{},"body":{"classes/Utils.html":{}}}],["dimension",{"_index":570,"title":{},"body":{"classes/Utils.html":{}}}],["direct",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":797,"title":{},"body":{"index.html":{}}}],["directli",{"_index":452,"title":{},"body":{"classes/Extras.html":{}}}],["directori",{"_index":801,"title":{},"body":{"index.html":{}}}],["display",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{}}}],["dist",{"_index":800,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":602,"title":{},"body":{"classes/Utils.html":{}}}],["distribut",{"_index":831,"title":{},"body":{"license.html":{}}}],["document",{"_index":713,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["down",{"_index":681,"title":{},"body":{"classes/Utils.html":{}}}],["duplic",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":810,"title":{},"body":{"index.html":{}}}],["each",{"_index":369,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["edg",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["effort",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["ele.data[\"label",{"_index":406,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["ele.data[\"nam",{"_index":399,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["ele.parent.data[\"label",{"_index":401,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["ele.valu",{"_index":404,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["element",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{}}}],["empti",{"_index":379,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["encod",{"_index":597,"title":{},"body":{"classes/Utils.html":{}}}],["end",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"index.html":{}}}],["entir",{"_index":372,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Extras.html":{}}}],["enumer",{"_index":765,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":337,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["equaledgessearch",{"_index":386,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["equaledgessearch.includes(edg",{"_index":433,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["equaledgessearch.push(n.parent.data[\"id\"]+n.data[\"id",{"_index":417,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["equaledgestarget",{"_index":387,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["equaledgestarget.includes(edg",{"_index":435,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["equaledgestarget.push(trg.parent.data[\"id\"]+trg.data[\"id",{"_index":418,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["even",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["event",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["exampl",{"_index":310,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["execut",{"_index":807,"title":{},"body":{"index.html":{}}}],["exist",{"_index":375,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["export",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"overview.html":{}}}],["express",{"_index":537,"title":{},"body":{"classes/Utils.html":{},"license.html":{}}}],["extra",{"_index":216,"title":{"classes/Extras.html":{}},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"coverage.html":{}}}],["f",{"_index":628,"title":{},"body":{"classes/Utils.html":{}}}],["f)*",{"_index":641,"title":{},"body":{"classes/Utils.html":{}}}],["f*",{"_index":640,"title":{},"body":{"classes/Utils.html":{}}}],["facilit",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["factor",{"_index":594,"title":{},"body":{"classes/Utils.html":{}}}],["fals",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":522,"title":{},"body":{"classes/Utils.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["final",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["find",{"_index":408,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["first",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["fit",{"_index":846,"title":{},"body":{"license.html":{}}}],["fix",{"_index":492,"title":{},"body":{"classes/Extras.html":{}}}],["flag",{"_index":803,"title":{},"body":{"index.html":{}}}],["flip",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["follow",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"license.html":{}}}],["for(var",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["form",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"classes/ClusterMatch.html":{}}}],["format",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["formsmodul",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":683,"title":{},"body":{"classes/Utils.html":{}}}],["free",{"_index":823,"title":{},"body":{"license.html":{}}}],["function",{"_index":438,"title":{},"body":{"classes/Extras.html":{},"classes/Utils.html":{}}}],["furnish",{"_index":836,"title":{},"body":{"license.html":{}}}],["further",{"_index":680,"title":{},"body":{"classes/Utils.html":{},"index.html":{}}}],["g",{"_index":627,"title":{},"body":{"classes/Utils.html":{}}}],["g.tostring(16)).slic",{"_index":654,"title":{},"body":{"classes/Utils.html":{}}}],["gener",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["get",{"_index":780,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcolor",{"_index":322,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["getcolor():str",{"_index":377,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["getcssstyl",{"_index":456,"title":{},"body":{"classes/Extras.html":{}}}],["getcssstyles(parentel",{"_index":467,"title":{},"body":{"classes/Extras.html":{}}}],["getequalmatch",{"_index":323,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["getlabel",{"_index":324,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["getsvgstr",{"_index":457,"title":{},"body":{"classes/Extras.html":{}}}],["getsvgstring(svgnod",{"_index":470,"title":{},"body":{"classes/Extras.html":{}}}],["gg",{"_index":653,"title":{},"body":{"classes/Utils.html":{}}}],["give",{"_index":667,"title":{},"body":{"classes/Utils.html":{}}}],["given",{"_index":352,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["go",{"_index":814,"title":{},"body":{"index.html":{}}}],["grant",{"_index":822,"title":{},"body":{"license.html":{}}}],["graph",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graphic",{"_index":605,"title":{},"body":{"classes/Utils.html":{}}}],["greater",{"_index":518,"title":{},"body":{"classes/Utils.html":{}}}],["h",{"_index":541,"title":{},"body":{"classes/Utils.html":{}}}],["h/60.0",{"_index":636,"title":{},"body":{"classes/Utils.html":{}}}],["h=0.0",{"_index":635,"title":{},"body":{"classes/Utils.html":{}}}],["hampshir",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["handl",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["height",{"_index":475,"title":{},"body":{"classes/Extras.html":{}}}],["help",{"_index":812,"title":{},"body":{"index.html":{}}}],["here",{"_index":445,"title":{},"body":{"classes/Extras.html":{},"miscellaneous/enumerations.html":{}}}],["herebi",{"_index":821,"title":{},"body":{"license.html":{}}}],["hide",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["hierarch",{"_index":557,"title":{},"body":{"classes/Utils.html":{}}}],["hierarchi",{"_index":599,"title":{},"body":{"classes/Utils.html":{}}}],["highlight",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["higlight",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["holder",{"_index":849,"title":{},"body":{"license.html":{}}}],["horizon",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["hsv",{"_index":538,"title":{},"body":{"classes/Utils.html":{}}}],["hsv2rgb",{"_index":507,"title":{},"body":{"classes/Utils.html":{}}}],["hsv2rgb(h",{"_index":533,"title":{},"body":{"classes/Utils.html":{}}}],["html",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["http://bl.ocks.org/rokotyan/0556f8facbaf344507cdc45dc3622177",{"_index":454,"title":{},"body":{"classes/Extras.html":{}}}],["http://localhost:4200",{"_index":793,"title":{},"body":{"index.html":{}}}],["http://www.w3.org/1999/xlink",{"_index":483,"title":{},"body":{"classes/Extras.html":{}}}],["hue",{"_index":542,"title":{},"body":{"classes/Utils.html":{}}}],["i.",{"_index":547,"title":{},"body":{"classes/Utils.html":{}}}],["i:numb",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["id",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["ident",{"_index":771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identifi",{"_index":354,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["imag",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{}}}],["impli",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"license.html":{}}}],["import",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["improv",{"_index":303,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["includ",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["initequalbranch",{"_index":325,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["initequalbranches(typ",{"_index":350,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["initi",{"_index":330,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["input",{"_index":355,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["inspect",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["interact",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["interest",{"_index":769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["interface/interface.compon",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["interfacecompon",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["interpret",{"_index":606,"title":{},"body":{"classes/Utils.html":{}}}],["isomorph",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["item",{"_index":614,"title":{},"body":{"classes/Utils.html":{}}}],["js",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":559,"title":{},"body":{"classes/Utils.html":{}}}],["jspdf",{"_index":481,"title":{},"body":{"classes/Extras.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["k",{"_index":630,"title":{},"body":{"classes/Utils.html":{}}}],["k*1.0",{"_index":638,"title":{},"body":{"classes/Utils.html":{}}}],["karma",{"_index":809,"title":{},"body":{"index.html":{}}}],["keep",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["keepdupl",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["keepstructur",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":601,"title":{},"body":{"classes/Utils.html":{}}}],["kind",{"_index":844,"title":{},"body":{"license.html":{}}}],["label",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["laboratori",{"_index":819,"title":{},"body":{"license.html":{}}}],["later",{"_index":370,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["leaf",{"_index":395,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["leav",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["left",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["leftbrack",{"_index":698,"title":{},"body":{"classes/Utils.html":{}}}],["legend",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["less",{"_index":706,"title":{},"body":{"classes/Utils.html":{}}}],["lesser",{"_index":517,"title":{},"body":{"classes/Utils.html":{}}}],["level",{"_index":697,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["liabil",{"_index":853,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":850,"title":{},"body":{"license.html":{}}}],["licens",{"_index":450,"title":{"license.html":{}},"body":{"classes/Extras.html":{}}}],["limit",{"_index":829,"title":{},"body":{"license.html":{}}}],["link",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["load",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["loaddendrogram",{"_index":564,"title":{},"body":{"classes/Utils.html":{}}}],["look",{"_index":530,"title":{},"body":{"classes/Utils.html":{}}}],["lower",{"_index":696,"title":{},"body":{"classes/Utils.html":{}}}],["main",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["march",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodul",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["match'",{"_index":366,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["matcheckboxmodul",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["materi",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodul",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["math.round(h",{"_index":637,"title":{},"body":{"classes/Utils.html":{}}}],["math.trunc(b*255",{"_index":655,"title":{},"body":{"classes/Utils.html":{}}}],["math.trunc(g*255",{"_index":652,"title":{},"body":{"classes/Utils.html":{}}}],["math.trunc(r*255",{"_index":648,"title":{},"body":{"classes/Utils.html":{}}}],["maticonmodul",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodul",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":588,"title":{},"body":{"classes/Utils.html":{}}}],["maxsplit",{"_index":584,"title":{},"body":{"classes/Utils.html":{}}}],["mean",{"_index":695,"title":{},"body":{"classes/Utils.html":{}}}],["measur",{"_index":603,"title":{},"body":{"classes/Utils.html":{}}}],["meet",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["merchant",{"_index":845,"title":{},"body":{"license.html":{}}}],["merg",{"_index":830,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["mind",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimum",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellan",{"_index":764,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":449,"title":{},"body":{"classes/Extras.html":{}}}],["mizuguchi",{"_index":818,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":444,"title":{},"body":{"classes/Extras.html":{},"license.html":{}}}],["modul",{"_index":262,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":813,"title":{},"body":{"index.html":{}}}],["n",{"_index":390,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"index.html":{}}}],["namespac",{"_index":494,"title":{},"body":{"classes/Extras.html":{}}}],["navig",{"_index":792,"title":{},"body":{"index.html":{}}}],["necesarili",{"_index":770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["new",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"index.html":{}}}],["newick",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["next",{"_index":682,"title":{},"body":{"classes/Utils.html":{}}}],["ng",{"_index":789,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["nikita",{"_index":441,"title":{},"body":{"classes/Extras.html":{}}}],["node",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["node'",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["non",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["none",{"_index":358,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["noninfring",{"_index":848,"title":{},"body":{"license.html":{}}}],["notic",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"license.html":{}}}],["npm",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["ns",{"_index":498,"title":{},"body":{"classes/Extras.html":{}}}],["null",{"_index":374,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["number",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["number=0",{"_index":663,"title":{},"body":{"classes/Utils.html":{}}}],["object",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["obtain",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["occur",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["on",{"_index":357,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["onchangecutoff",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangecutoff(id",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangehighlighttyp",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangehighlighttype(typ",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangematchtyp",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangematchtype(typ",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangesamples",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["onchangesamplesize(s",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["onflipdendrogram",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["onflipdendrogram(id",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["onloaddendro",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["onloaddendro(fil",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["onremovedendro",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["onremovedendro(id",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavepdf",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavepdf(ev",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavepng",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavepng(ev",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavesvg",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["onsavesvg(ev",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["onsortdendro",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["onsortdendro(id",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["ontoggledisplaymatch",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["ontoggledisplaymatches(showmatch",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":691,"title":{},"body":{"classes/Utils.html":{}}}],["option",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["order",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["origin",{"_index":451,"title":{},"body":{"classes/Extras.html":{}}}],["otherwis",{"_index":402,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"license.html":{}}}],["out",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overal",{"_index":565,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["overview",{"_index":861,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":576,"title":{},"body":{"classes/Utils.html":{}}}],["p[0]+t[0",{"_index":710,"title":{},"body":{"classes/Utils.html":{}}}],["p[1]+t[1",{"_index":711,"title":{},"body":{"classes/Utils.html":{}}}],["packag",{"_index":554,"title":{"dependencies.html":{}},"body":{"classes/Utils.html":{}}}],["pair",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["param",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["parent",{"_index":410,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["parentel",{"_index":469,"title":{},"body":{"classes/Extras.html":{}}}],["parentelement.id",{"_index":501,"title":{},"body":{"classes/Extras.html":{}}}],["pars",{"_index":558,"title":{},"body":{"classes/Utils.html":{}}}],["parsephylogramtre",{"_index":508,"title":{},"body":{"classes/Utils.html":{}}}],["parsephylogramtree(dendrogram",{"_index":550,"title":{},"body":{"classes/Utils.html":{}}}],["part",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["partial",{"_index":703,"title":{},"body":{"classes/Utils.html":{}}}],["particular",{"_index":520,"title":{},"body":{"classes/Utils.html":{},"license.html":{}}}],["pdf",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["perform",{"_index":304,"title":{},"body":{"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":820,"title":{},"body":{"license.html":{}}}],["permit",{"_index":835,"title":{},"body":{"license.html":{}}}],["person",{"_index":825,"title":{},"body":{"license.html":{}}}],["phylogram",{"_index":553,"title":{},"body":{"classes/Utils.html":{}}}],["place",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["png",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["point",{"_index":421,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["portion",{"_index":842,"title":{},"body":{"license.html":{}}}],["posit",{"_index":531,"title":{},"body":{"classes/Utils.html":{}}}],["potenti",{"_index":670,"title":{},"body":{"classes/Utils.html":{}}}],["pre",{"_index":315,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["previousindex",{"_index":690,"title":{},"body":{"classes/Utils.html":{}}}],["previousindex+1",{"_index":687,"title":{},"body":{"classes/Utils.html":{}}}],["previousindex:numb",{"_index":676,"title":{},"body":{"classes/Utils.html":{}}}],["privat",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["process",{"_index":707,"title":{},"body":{"classes/Utils.html":{}}}],["prod",{"_index":802,"title":{},"body":{"index.html":{}}}],["product",{"_index":804,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":782,"title":{},"body":{"index.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["protractor",{"_index":811,"title":{},"body":{"index.html":{}}}],["provid",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"license.html":{},"overview.html":{}}}],["provis",{"_index":447,"title":{},"body":{"classes/Extras.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["publish",{"_index":448,"title":{},"body":{"classes/Extras.html":{},"license.html":{}}}],["purpos",{"_index":847,"title":{},"body":{"license.html":{}}}],["q",{"_index":629,"title":{},"body":{"classes/Utils.html":{}}}],["r",{"_index":555,"title":{},"body":{"classes/Utils.html":{}}}],["r.tostring(16)).slic",{"_index":651,"title":{},"body":{"classes/Utils.html":{}}}],["rad",{"_index":568,"title":{},"body":{"classes/Utils.html":{}}}],["radian",{"_index":580,"title":{},"body":{"classes/Utils.html":{}}}],["rang",{"_index":544,"title":{},"body":{"classes/Utils.html":{}}}],["rawtex",{"_index":613,"title":{},"body":{"classes/Utils.html":{}}}],["rawtex.indexof",{"_index":686,"title":{},"body":{"classes/Utils.html":{}}}],["rawtex.length",{"_index":689,"title":{},"body":{"classes/Utils.html":{}}}],["rawtex.substring(currentindex+1",{"_index":705,"title":{},"body":{"classes/Utils.html":{}}}],["rawtext",{"_index":666,"title":{},"body":{"classes/Utils.html":{}}}],["re",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["readm",{"_index":815,"title":{},"body":{"index.html":{}}}],["rearrang",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["recognis",{"_index":773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recurs",{"_index":560,"title":{},"body":{"classes/Utils.html":{}}}],["redrawn",{"_index":312,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["refer",{"_index":566,"title":{},"body":{"classes/Utils.html":{}}}],["reload",{"_index":795,"title":{},"body":{"index.html":{}}}],["remaind",{"_index":704,"title":{},"body":{"classes/Utils.html":{}}}],["remov",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["render",{"_index":306,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["repres",{"_index":335,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["represent",{"_index":546,"title":{},"body":{"classes/Utils.html":{}}}],["request",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["requir",{"_index":311,"title":{},"body":{"classes/ClusterMatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respect",{"_index":411,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["restrict",{"_index":828,"title":{},"body":{"license.html":{}}}],["result",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["retriev",{"_index":389,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["return",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["rgb",{"_index":540,"title":{},"body":{"classes/Utils.html":{}}}],["right",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"license.html":{}}}],["rightbrack",{"_index":701,"title":{},"body":{"classes/Utils.html":{}}}],["rightbrack:numb",{"_index":700,"title":{},"body":{"classes/Utils.html":{}}}],["rokotyan",{"_index":442,"title":{},"body":{"classes/Extras.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["root'},{'nam",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["root[\"children",{"_index":661,"title":{},"body":{"classes/Utils.html":{}}}],["rotat",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["rotate(p",{"_index":567,"title":{},"body":{"classes/Utils.html":{}}}],["routin",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["rr",{"_index":649,"title":{},"body":{"classes/Utils.html":{}}}],["rr+gg+bb",{"_index":658,"title":{},"body":{"classes/Utils.html":{}}}],["rrggbb",{"_index":549,"title":{},"body":{"classes/Utils.html":{}}}],["rsplit",{"_index":509,"title":{},"body":{"classes/Utils.html":{}}}],["rsplit(st",{"_index":582,"title":{},"body":{"classes/Utils.html":{}}}],["run",{"_index":788,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":534,"title":{},"body":{"classes/Utils.html":{}}}],["safari",{"_index":497,"title":{},"body":{"classes/Extras.html":{}}}],["same",{"_index":314,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["sampl",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["satur",{"_index":543,"title":{},"body":{"classes/Utils.html":{}}}],["save",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["savea",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["saver",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["scaffold",{"_index":796,"title":{},"body":{"index.html":{}}}],["scale",{"_index":510,"title":{},"body":{"classes/Utils.html":{},"dependencies.html":{}}}],["scale(p",{"_index":589,"title":{},"body":{"classes/Utils.html":{}}}],["scene",{"_index":307,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["search",{"_index":353,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["searchnod",{"_index":382,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["searchnodes.foreach(function(el",{"_index":428,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["searchnodes.length",{"_index":388,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["searchnodes.pop",{"_index":391,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["searchnodes.push(n.par",{"_index":414,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["searchnodes.splice(0,1",{"_index":424,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["second",{"_index":333,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["select",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["selectortextarr",{"_index":499,"title":{},"body":{"classes/Extras.html":{}}}],["selectortextarr.push",{"_index":500,"title":{},"body":{"classes/Extras.html":{}}}],["sell",{"_index":834,"title":{},"body":{"license.html":{}}}],["sep",{"_index":583,"title":{},"body":{"classes/Utils.html":{}}}],["separ",{"_index":587,"title":{},"body":{"classes/Utils.html":{}}}],["seri",{"_index":772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serial",{"_index":487,"title":{},"body":{"classes/Extras.html":{}}}],["serializer.serializetostring(svgnod",{"_index":489,"title":{},"body":{"classes/Extras.html":{}}}],["serv",{"_index":790,"title":{},"body":{"index.html":{}}}],["server",{"_index":787,"title":{},"body":{"index.html":{}}}],["set",{"_index":363,"title":{},"body":{"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["setcolor",{"_index":326,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["setcolor(color",{"_index":361,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["sever",{"_index":504,"title":{},"body":{"classes/Utils.html":{}}}],["shall",{"_index":840,"title":{},"body":{"license.html":{}}}],["showmatch",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["shown",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["simi",{"_index":360,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["similar",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["simpli",{"_index":684,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["singl",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["size",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["slightli",{"_index":443,"title":{},"body":{"classes/Extras.html":{}}}],["softwar",{"_index":827,"title":{},"body":{"license.html":{}}}],["sort",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"index.html":{}}}],["space",{"_index":578,"title":{},"body":{"classes/Utils.html":{}}}],["spec\\.t",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifi",{"_index":331,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["split",{"_index":586,"title":{},"body":{"classes/Utils.html":{}}}],["splitintochildren",{"_index":511,"title":{},"body":{"classes/Utils.html":{}}}],["splitintochildren(rawtex",{"_index":595,"title":{},"body":{"classes/Utils.html":{}}}],["src/.../clustermatchtype.t",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:118",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:136",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:151",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:219",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:233",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:248",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:266",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:290",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:303",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:89",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/canvas/canvas.component.t",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["src/app/clustermatch.t",{"_index":301,"title":{},"body":{"classes/ClusterMatch.html":{},"coverage.html":{}}}],["src/app/clustermatch.ts:102",{"_index":351,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:174",{"_index":362,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:21",{"_index":341,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:23",{"_index":342,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:25",{"_index":343,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:27",{"_index":334,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:31",{"_index":329,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:71",{"_index":344,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:80",{"_index":347,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatch.ts:89",{"_index":349,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["src/app/clustermatchtype.t",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/dendrogram.t",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["src/app/extras.t",{"_index":437,"title":{},"body":{"classes/Extras.html":{},"coverage.html":{}}}],["src/app/extras.ts:118",{"_index":480,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/extras.ts:18",{"_index":471,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/extras.ts:31",{"_index":468,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/extras.ts:75",{"_index":465,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/extras.ts:80",{"_index":461,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/extras.ts:88",{"_index":477,"title":{},"body":{"classes/Extras.html":{}}}],["src/app/interface/interface.component.t",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["src/app/utils.t",{"_index":503,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/utils.ts:135",{"_index":551,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:182",{"_index":569,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:198",{"_index":585,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:213",{"_index":590,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:23",{"_index":515,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:258",{"_index":596,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:315",{"_index":620,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:42",{"_index":525,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/utils.ts:61",{"_index":536,"title":{},"body":{"classes/Utils.html":{}}}],["src/environments/environment.prod.t",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":529,"title":{},"body":{"classes/Utils.html":{}}}],["stand",{"_index":675,"title":{},"body":{"classes/Utils.html":{}}}],["start",{"_index":381,"title":{"index.html":{},"license.html":{}},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["statement",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["step",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["storag",{"_index":625,"title":{},"body":{"classes/Utils.html":{}}}],["store",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"index.html":{}}}],["str",{"_index":466,"title":{},"body":{"classes/Extras.html":{}}}],["strategi",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["string):void",{"_index":436,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["struct",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["structur",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["sub",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["sub)clust",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":837,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":832,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":841,"title":{},"body":{"license.html":{}}}],["subtre",{"_index":340,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["such",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["suppli",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":859,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"modules.html":{}}}],["svgnode",{"_index":472,"title":{},"body":{"classes/Extras.html":{}}}],["svgnode.setattribute('xlink",{"_index":482,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring",{"_index":478,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring.replace(/(\\w+)?:?xlink=/g",{"_index":490,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring.replace(/ns\\d+:href/g",{"_index":495,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring2imag",{"_index":458,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring2image(svgstr",{"_index":473,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring2pdf",{"_index":459,"title":{},"body":{"classes/Extras.html":{}}}],["svgstring2pdf(svgstr",{"_index":479,"title":{},"body":{"classes/Extras.html":{}}}],["switch",{"_index":642,"title":{},"body":{"classes/Utils.html":{}}}],["system",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["t",{"_index":619,"title":{},"body":{"classes/Utils.html":{}}}],["tabl",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{}}}],["targat",{"_index":332,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["target",{"_index":302,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnod",{"_index":384,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnodes.findindex(function(el",{"_index":394,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnodes.foreach(function(el",{"_index":430,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnodes.push(trg.par",{"_index":415,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnodes.splice(0,1",{"_index":425,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["targetnodes.splice(trg",{"_index":412,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["tell",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":806,"title":{},"body":{"index.html":{}}}],["text",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["this._canvas.drawscene(this._interface.getdisplaymatch",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["this._canvas.updatematchhighlight(typ",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["this._color",{"_index":373,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._equalbranch",{"_index":376,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._label",{"_index":367,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._sourcenod",{"_index":364,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._sourcenode.data[\"label",{"_index":368,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._sourcenode.descend",{"_index":422,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._sourcenode.leav",{"_index":383,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._targetnod",{"_index":365,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._targetnode.descend",{"_index":423,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this._targetnode.leav",{"_index":385,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this.appendcss",{"_index":486,"title":{},"body":{"classes/Extras.html":{}}}],["this.data[\"label",{"_index":405,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this.data[\"nam",{"_index":398,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this.getcssstyl",{"_index":485,"title":{},"body":{"classes/Extras.html":{}}}],["this.parent.data[\"label",{"_index":400,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["this.valu",{"_index":396,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["thu",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{}}}],["time",{"_index":526,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["titl",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["top",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":856,"title":{},"body":{"license.html":{}}}],["track",{"_index":674,"title":{},"body":{"classes/Utils.html":{}}}],["translat",{"_index":512,"title":{},"body":{"classes/Utils.html":{}}}],["translate(p",{"_index":618,"title":{},"body":{"classes/Utils.html":{}}}],["translate(p:numb",{"_index":709,"title":{},"body":{"classes/Utils.html":{}}}],["travers",{"_index":561,"title":{},"body":{"classes/Utils.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["trg",{"_index":393,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["trivial",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["tupl",{"_index":539,"title":{},"body":{"classes/Utils.html":{}}}],["turn",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["two",{"_index":516,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["type",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":403,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["under",{"_index":446,"title":{},"body":{"classes/Extras.html":{}}}],["underli",{"_index":308,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["uneven",{"_index":694,"title":{},"body":{"classes/Utils.html":{}}}],["unit",{"_index":805,"title":{},"body":{"index.html":{}}}],["up",{"_index":378,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["updat",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["upper",{"_index":668,"title":{},"body":{"classes/Utils.html":{}}}],["us",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{}}}],["usual",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{}}}],["util",{"_index":215,"title":{"classes/Utils.html":{}},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.count(rawtex",{"_index":672,"title":{},"body":{"classes/Utils.html":{}}}],["utils.count(rawtex.substring(0,currentindex",{"_index":699,"title":{},"body":{"classes/Utils.html":{}}}],["utils.splitintochildren(dendrogram",{"_index":662,"title":{},"body":{"classes/Utils.html":{}}}],["v",{"_index":535,"title":{},"body":{"classes/Utils.html":{}}}],["valu",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{},"classes/Utils.html":{}}}],["variabl",{"_index":730,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vector",{"_index":593,"title":{},"body":{"classes/Utils.html":{}}}],["version",{"_index":316,"title":{},"body":{"classes/ClusterMatch.html":{},"index.html":{}}}],["via",{"_index":808,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('canva",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('interfac",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["visual",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/ClusterMatch.html":{},"classes/Extras.html":{}}}],["want",{"_index":356,"title":{},"body":{"classes/ClusterMatch.html":{},"miscellaneous/enumerations.html":{}}}],["warranti",{"_index":843,"title":{},"body":{"license.html":{}}}],["well",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whenev",{"_index":407,"title":{},"body":{"classes/ClusterMatch.html":{}}}],["whether",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"classes/Utils.html":{},"license.html":{}}}],["whithin",{"_index":598,"title":{},"body":{"classes/Utils.html":{}}}],["whithout",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["whose",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":474,"title":{},"body":{"classes/Extras.html":{}}}],["within",{"_index":348,"title":{},"body":{"classes/ClusterMatch.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["without",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"classes/Extras.html":{},"license.html":{}}}],["word",{"_index":673,"title":{},"body":{"classes/Utils.html":{}}}],["written",{"_index":552,"title":{},"body":{"classes/Utils.html":{}}}],["x",{"_index":591,"title":{},"body":{"classes/Utils.html":{}}}],["x,i",{"_index":571,"title":{},"body":{"classes/Utils.html":{}}}],["xlink",{"_index":493,"title":{},"body":{"classes/Extras.html":{}}}],["xlink:href",{"_index":496,"title":{},"body":{"classes/Extras.html":{}}}],["xmlns:xlink",{"_index":491,"title":{},"body":{"classes/Extras.html":{}}}],["xmlserial",{"_index":488,"title":{},"body":{"classes/Extras.html":{}}}],["y",{"_index":592,"title":{},"body":{"classes/Utils.html":{}}}],["z",{"_index":574,"title":{},"body":{"classes/Utils.html":{}}}],["zone.j",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component definition\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _canvas\n                            \n                            \n                                    Private\n                                _dendrograms\n                            \n                            \n                                _interface\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onChangeCutoff\n                            \n                            \n                                    Public\n                                onChangeHighlightType\n                            \n                            \n                                    Public\n                                onChangeMatchType\n                            \n                            \n                                    Public\n                                onChangeSampleSize\n                            \n                            \n                                    Public\n                                onFlipDendrogram\n                            \n                            \n                                    Public\n                                onLoadDendro\n                            \n                            \n                                    Public\n                                onRemoveDendro\n                            \n                            \n                                    Public\n                                onSavePDF\n                            \n                            \n                                    Public\n                                onSavePNG\n                            \n                            \n                                    Public\n                                onSaveSVG\n                            \n                            \n                                    Public\n                                onSortDendro\n                            \n                            \n                                    Public\n                                onToggleDisplayMatches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeCutoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChangeCutoff(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Handle the change in the cutoff for a single Dendrogram.\nThe change in the cutoff implies changing the amount of nodes that can take\npart of the matching routine, thus in turn it calls for an update on the\nnode's labels, and an update on the cluster matching calculation.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the Dendrogram whose cutoff was changed\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeHighlightType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChangeHighlightType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Handle the changing of higlighting options for edges in matching sub-\nclusters.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type of edge highlighting selected by the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeMatchType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChangeMatchType(type: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Handle changes in the type of sub-cluster marches that should be displayed\nby the application.\nSince the matching routine is based on the names of the internal nodes of\nthe Dendrogram structure, the first step into updating the display is to\nre-name the nodes. Then, clusters matches are re-calculated anf finally\ndisplayed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type of matching strategy selected by the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onChangeSampleSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onChangeSampleSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Handle the change in sample size for cluster matching.\nThe sample size tells the application the minimum number of leaves a node\nhas to have in order to be classified as non-trivial for the matching\nalgorithm.\nWhen considered trivial, a node will not be included in the matching\nroutine, and thus will not be paired to a similar node in a different\nstructure, even if it meets the currently selected criteria for such match\nto occur.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new size for sample, that should be used when\ncalculating matching nodes across Dendrogram structures\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFlipDendrogram\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onFlipDendrogram(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Handle the horizonal flip of a single Dendrogram display.\nDendrograms are usually shown with their root node at the left-end of the\ndisplay, and the leaves at the right-end. But in order to facilitate the\nvisual inspection of cluster matches, the user is allowed to flip this\nvisualization, making the leaves display at the left-end, and the root at\nthe right-end.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the Dendrogram the user has selected to flip\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onLoadDendro\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onLoadDendro(file: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Handle the loading of a Dendrogram structure and its display.\nDendrograms need to be stored on text files, following the Newick (or New)\nHampshire) format.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The file object where the Dendrogram is stored, supplied\nby the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onRemoveDendro\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onRemoveDendro(id: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:219\n                            \n                        \n\n\n                \n                    \n                            Handle the removal of a Dendrogram from the display.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSavePDF\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSavePDF(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:233\n                            \n                        \n\n\n                \n                    \n                            Handle the request for saving the current canvas into a PDF file.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The click event generated by the button element of the\ninterface\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSavePNG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSavePNG(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Handle the request for saving the current canvas into a PNG image.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The click event generated by the button element of the\ninterface\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSaveSVG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSaveSVG(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:266\n                            \n                        \n\n\n                \n                    \n                            Handle the request for saving the current canvas into an SVG image.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The click event generated by the button element of the\ninterface\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSortDendro\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSortDendro(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:290\n                            \n                        \n\n\n                \n                    \n                            Handle the request for alphabetically sorting the leaves of a Dendrogram.\nNotice that only a best effort will be done to alphabetically sorting the\nnodes, from top to botton. The sorting is done only by applying rotations\nto the nodes, whithout changing the structure, and without adding crossing\nof edges.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The index of the Dendrogram selected by the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onToggleDisplayMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onToggleDisplayMatches(showMatches: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:303\n                            \n                        \n\n\n                \n                    \n                            Handle the selection to display or hide the matches of cluster across\npairs of consecutive Dendrograms.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        showMatches\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An indication on whether the matches should or\nnot be displayed, according to user selection\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _canvas\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _canvas:     CanvasComponent\n\n                    \n                \n                    \n                        \n                            Type :     CanvasComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n                \n                    \n                        link to the canvas element where the visualization takes place \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dendrograms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dendrograms:     Dendrogram[]\n\n                    \n                \n                    \n                        \n                            Type :     Dendrogram[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                        The list of dendrograms currently loaded in the application \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _interface\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _interface:     InterfaceComponent\n\n                    \n                \n                    \n                        \n                            Type :     InterfaceComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        link to the interface component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Dendrogram (Sub)Cluster Match Visualization System\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                        Title for the Application \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import * as d3 from 'd3';\n\nimport { ViewChild } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { Dendrogram } from './dendrogram';\nimport { Utils } from './utils';\nimport { Extras } from './extras';\nimport { ClusterMatchEnum } from './clusterMatchType';\nimport { CanvasComponent } from './canvas/canvas.component';\nimport { InterfaceComponent } from './interface/interface.component';\nimport { saveAs } from 'file-saver';\n\n/**\n * Component definition\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/**\n * Main Application Component\n * Handles the interaction needed between the Interface Component - which\n * provides an interface to the user and captures its interactions; with the\n * Canvas Component - that deals with the display of Dendrograms and the\n * calculation of matches between them.\n */\nexport class AppComponent {\n  /** The list of dendrograms currently loaded in the application */\n  private _dendrograms: Dendrogram[] = [];\n  /** Title for the Application */\n  private _title: string = \"Dendrogram (Sub)Cluster Match Visualization System\";\n\n  /** link to the canvas element where the visualization takes place */\n  @ViewChild('canvas', {static: false}) _canvas: CanvasComponent;\n  /** link to the interface component */\n  @ViewChild('interface', {static: false}) _interface: InterfaceComponent;\n\n  /**\n   * Handle the changing of higlighting options for edges in matching sub-\n   * clusters.\n   *\n   * @param {string} type The type of edge highlighting selected by the user\n   */\n  public onChangeHighlightType(type: string): void{\n    this._canvas.updateMatchHighlight(type);\n    this._canvas.drawScene(this._interface.getDisplayMatches());\n  }\n\n  /**\n   * Handle changes in the type of sub-cluster marches that should be displayed\n   * by the application.\n   *\n   * Since the matching routine is based on the names of the internal nodes of\n   * the Dendrogram structure, the first step into updating the display is to\n   * re-name the nodes. Then, clusters matches are re-calculated anf finally\n   * displayed.\n   *\n   * @param {number} type The type of matching strategy selected by the user\n   */\n  public onChangeMatchType(type: number): void{\n    // depending on the type of cluster matching algorithm, we change the\n    // parameters used for the label generation\n    // Isomorphic - keep struct.: true;  keep duplicates: true\n    // Rearranged - keep struct.: false; keep duplicates: true\n    // Contained  - keep struct.: false; keep duplicates: false\n    var keepStructure: boolean = (type === ClusterMatchEnum.BIOISOMORPHIC) ? true : false;\n    var keepDuplicate: boolean = (type === ClusterMatchEnum.CONTAINED) ? false : true;\n    for(var i:number = 0; i\n    \n\n    \n        \n\n\n  \n  \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CanvasComponent', 'selector': 'app-canvas'},{'name': 'InterfaceComponent', 'selector': 'app-interface'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCanvasComponent\n\nCanvasComponent\n\nAppModule -->\n\nCanvasComponent->AppModule\n\n\n\n\n\nInterfaceComponent\n\nInterfaceComponent\n\nAppModule -->\n\nInterfaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CanvasComponent\n                            \n                            \n                                InterfaceComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// for material use in forms\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material' ;\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule, MatIconModule } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AppComponent } from './app.component';\nimport { InterfaceComponent } from './interface/interface.component';\nimport { CanvasComponent } from './canvas/canvas.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InterfaceComponent,\n    CanvasComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule\n  ],\n  providers: [\n    Title\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClusterMatch.html":{"url":"classes/ClusterMatch.html","title":"class - ClusterMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClusterMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/clusterMatch.ts\n        \n\n            \n                Description\n            \n            \n                A ClusterMatch object is used to store a single match between nodes in a\nsource and target Dendrogram.\nWe use them to improve performance, to avoid calculate them when user\ninteraction implies a new rendering of the scene, but that does not change\nthe underlying properties of the compared structures. For example, flipping a\nDendrogram requires the scene to be redrawn, but since the matches continue\nto be the same, we can use a pre-calculated version of them.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _color\n                            \n                            \n                                    Private\n                                _equalBranches\n                            \n                            \n                                    Private\n                                _label\n                            \n                            \n                                    Private\n                                _sourceNode\n                            \n                            \n                                    Private\n                                _targetNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getColor\n                            \n                            \n                                getEqualMatches\n                            \n                            \n                                    Public\n                                getLabel\n                            \n                            \n                                initEqualBranches\n                            \n                            \n                                    Public\n                                setColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: any, target: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/clusterMatch.ts:31\n                            \n                        \n\n                \n                    \n                            Initialize a new cluster match, by specifying the source node (cluster root\non the source Dendrogram) and the targat node that matches it on the target\nDendrogram.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                A node in the source Dendrogram, that matches a second\nnode in the target Dendrogram\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The node in the target Dendrogram that matches with the\nnode in the source Dendrogram\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _color\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _color:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:27\n                            \n                        \n\n                \n                    \n                        a string that represents the color used for the display of the match \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _equalBranches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _equalBranches:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:31\n                            \n                        \n\n                \n                    \n                        The list of equal branches on both the source-rooted and target-rooted\nsubtrees \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:21\n                            \n                        \n\n                \n                    \n                        The label that provides a name for the cluster match \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sourceNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _sourceNode:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:23\n                            \n                        \n\n                \n                    \n                        The source node for the match \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _targetNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _targetNode:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:25\n                            \n                        \n\n                \n                    \n                        The target node for the match \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:71\n                            \n                        \n\n\n                \n                    \n                            Provide access to the colour of this match\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    A string that represents the colour\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEqualMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEqualMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:80\n                            \n                        \n\n\n                \n                    \n                            Provide access to the list of equal branches within the ClusterMatch\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The list of equal branches in the current match\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLabel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:89\n                            \n                        \n\n\n                \n                    \n                            Provide access to the label (name) of the match\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    The label of the cluster\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initEqualBranches\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitEqualBranches(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:102\n                            \n                        \n\n\n                \n                    \n                            For a given cluster match, we search and identify the edges in the sub-\nclusters rooted at source and target nodes, that are equal or different,\ndepending on the type of highlight specified as input parameter.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The type of highlight we want to make, can take one of\nthe following values: \"none\" (no highlight), \"diff\" (highlight different\nbranches) or \"simi\" (highlight similar branches)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setColor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setColor(color: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/clusterMatch.ts:174\n                            \n                        \n\n\n                \n                    \n                            Set the colour to be used in the display of this match.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        color\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A string containing the definition of the colour\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as d3 from 'd3';\n\nimport { Dendrogram } from './dendrogram';\nimport { Utils } from './utils';\nimport { ClusterMatchEnum } from './clusterMatchType';\n\n/**\n * A ClusterMatch object is used to store a single match between nodes in a\n * source and target Dendrogram.\n *\n * We use them to improve performance, to avoid calculate them when user\n * interaction implies a new rendering of the scene, but that does not change\n * the underlying properties of the compared structures. For example, flipping a\n * Dendrogram requires the scene to be redrawn, but since the matches continue\n * to be the same, we can use a pre-calculated version of them.\n */\n\nexport class ClusterMatch{\n\n  /** The label that provides a name for the cluster match */\n  private _label: string;\n  /** The source node for the match */\n  private _sourceNode: any;\n  /** The target node for the match */\n  private _targetNode: any;\n  /** a string that represents the color used for the display of the match */\n  private _color: string;\n\n  /** The list of equal branches on both the source-rooted and target-rooted\n   * subtrees */\n  private _equalBranches: any;\n\n  /**\n   * Initialize a new cluster match, by specifying the source node (cluster root\n   * on the source Dendrogram) and the targat node that matches it on the target\n   * Dendrogram.\n   *\n   * @constructor\n   * @param {any} source A node in the source Dendrogram, that matches a second\n   * node in the target Dendrogram\n   * @param {any} target The node in the target Dendrogram that matches with the\n   * node in the source Dendrogram\n   */\n  constructor(source: any, target: any){\n    // initialize source and target components\n    this._sourceNode = source;\n    this._targetNode = target;\n\n    // we initialize the match's label with the same name as the label used for\n    // the nodes that form it\n    this._label = this._sourceNode.data[\"label\"];\n\n    // the color for each match needs to be defined later, when the complete set\n    // of matches for the entire scene has been defined\n    this._color = null;\n\n    // since the match between the source and the target nodes does not require\n    // to be isomorphic (their sub-trees do not have to be equal), for each\n    // branch in the source-rooted sub-tree, an equal branch may exist in the\n    // target-rooted sub-tree\n    // we keep a list of all equal branches, so that it can later be used for\n    // highlight of the structures\n    this._equalBranches = [];\n  }\n\n  /**\n   * Provide access to the colour of this match\n   *\n   * @returns {string} A string that represents the colour\n   */\n  public getColor():string {\n    return this._color;\n  }\n\n  /**\n   * Provide access to the list of equal branches within the ClusterMatch\n   *\n   * @returns {any} The list of equal branches in the current match\n   */\n  getEqualMatches(): any{\n    return this._equalBranches;\n  }\n\n  /**\n   * Provide access to the label (name) of the match\n   *\n   * @returns {string} The label of the cluster\n   */\n  public getLabel(): string{\n    return this._label;\n  }\n\n  /**\n   * For a given cluster match, we search and identify the edges in the sub-\n   * clusters rooted at source and target nodes, that are equal or different,\n   * depending on the type of highlight specified as input parameter.\n   *\n   * @param {string} type The type of highlight we want to make, can take one of\n   * the following values: \"none\" (no highlight), \"diff\" (highlight different\n   * branches) or \"simi\" (highlight similar branches)\n   */\n  initEqualBranches(type: string): void{\n    /* If no highlight required, return after setting up an empty list */\n    this._equalBranches = [];\n    if( type === \"none\") return;\n\n    /* construct initial list of nodes to search for edge matching. We start\n     * the search from the leaves up.*/\n    var searchNodes: any = this._sourceNode.leaves();\n    var targetNodes: any = this._targetNode.leaves();\n\n    var equalEdgesSearch: string[] = [];\n    var equalEdgesTarget: string[] = [];\n\n    while( searchNodes.length > 0 ){\n      /* retrieve an element from the search list*/\n      var n: any = searchNodes.pop();\n      /* and check for a match within the target list */\n      var trg: any = targetNodes.findIndex(function(ele){\n        /* if searched node is a leaf, match by name */\n        if( this.value === 1)\n          return this.data[\"name\"] === ele.data[\"name\"] &&\n            this.parent.data[\"label\"] === ele.parent.data[\"label\"];\n        /* otherwise match by label */\n        return this.parent.data[\"label\"] !== undefined &&\n          ele.parent.data[\"label\"] !== undefined &&\n          ele.value !== 1 &&\n          this.data[\"label\"] === ele.data[\"label\"] &&\n          this.parent.data[\"label\"] === ele.parent.data[\"label\"];\n      }, n);\n      /* whenever we find a match, we add it to the list of matches; also, we\n       * add the parent for both search and target nodes, to the respective\n       * lists of elements*/\n      if( trg !== -1 ){\n        trg = targetNodes.splice(trg, 1)[0];\n        searchNodes.push(n.parent);\n        targetNodes.push(trg.parent);\n        /* Add the elements to the corresponding list */\n        equalEdgesSearch.push(n.parent.data[\"id\"]+n.data[\"id\"]);\n        equalEdgesTarget.push(trg.parent.data[\"id\"]+trg.data[\"id\"]);\n      }\n    }\n    if (type === \"simi\"){\n      this._equalBranches = [equalEdgesSearch, equalEdgesTarget];\n      return ;\n    }\n\n    /* when the highlight is to be done on the different branches, we actually\n     * need the complement of the set of branches saved up to this point */\n    searchNodes = this._sourceNode.descendants();\n    targetNodes = this._targetNode.descendants();\n    searchNodes.splice(0,1);\n    targetNodes.splice(0,1);\n    var diffEdgesSearch: string[] = [];\n    var diffEdgesTarget: string[] = [];\n    searchNodes.forEach(function(ele){\n      diffEdgesSearch.push(ele.parent.data[\"id\"]+ele.data[\"id\"]);\n    });\n    targetNodes.forEach(function(ele){\n      diffEdgesTarget.push(ele.parent.data[\"id\"]+ele.data[\"id\"]);\n    });\n\n    diffEdgesSearch = diffEdgesSearch.filter(edge => !equalEdgesSearch.includes(edge));\n    diffEdgesTarget = diffEdgesTarget.filter(edge => !equalEdgesTarget.includes(edge));\n\n    this._equalBranches = [diffEdgesSearch, diffEdgesTarget];\n  }\n\n  /**\n   * Set the colour to be used in the display of this match.\n   *\n   * @param {string} color A string containing the definition of the colour\n   */\n  public setColor(color: string):void{\n    this._color = color;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Extras.html":{"url":"classes/Extras.html","title":"class - Extras","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Extras\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/extras.ts\n        \n\n            \n                Description\n            \n            \n                Class that provides functionality to export the SVG display from the Canvas\nComponent to image files.\nThe following code, is almost entirely authored by Nikita Rokotyan, and it is\nused and slightly modified here under the provision given as published under\nan MIT License. You can get the original code directly from bl.ocks, on the\nfollowing link:\nhttp://bl.ocks.org/Rokotyan/0556f8facbaf344507cdc45dc3622177\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                appendCSS\n                            \n                            \n                                    Static\n                                contains\n                            \n                            \n                                    Static\n                                getCSSStyles\n                            \n                            \n                                    Static\n                                getSVGString\n                            \n                            \n                                    Static\n                                svgString2Image\n                            \n                            \n                                    Static\n                                svgString2Pdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            appendCSS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        appendCSS(cssText: , element: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cssText\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            contains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        contains(str: , arr: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        arr\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getCSSStyles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCSSStyles(parentElement: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentElement\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSVGString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSVGString(svgNode: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        svgNode\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            svgString2Image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        svgString2Image(svgString: , width: , height: , format: , callback: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        svgString\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        format\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            svgString2Pdf\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        svgString2Pdf(svgString: , width: , height: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/extras.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        svgString\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as jsPDF from 'jspdf';\n\nimport { saveAs } from 'file-saver';\n\n/**\n * Class that provides functionality to export the SVG display from the Canvas\n * Component to image files.\n *\n * The following code, is almost entirely authored by Nikita Rokotyan, and it is\n * used and slightly modified here under the provision given as published under\n * an MIT License. You can get the original code directly from bl.ocks, on the\n * following link:\n *\n * http://bl.ocks.org/Rokotyan/0556f8facbaf344507cdc45dc3622177\n */\nexport class Extras{\n\n  public static getSVGString( svgNode: any ):string {\n  \tsvgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n  \tvar cssStyleText = this.getCSSStyles( svgNode );\n\n  \tthis.appendCSS( cssStyleText, svgNode );\n\n  \tvar serializer = new XMLSerializer();\n  \tvar svgString = serializer.serializeToString(svgNode);\n  \tsvgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink='); // Fix root xlink without namespace\n  \tsvgString = svgString.replace(/NS\\d+:href/g, 'xlink:href'); // Safari NS namespace fix\n    return svgString;\n  }\n\n\tpublic static getCSSStyles( parentElement ) {\n\t  var selectorTextArr = [];\n\n    // Add Parent element Id and Classes to the list\n\t\tselectorTextArr.push( '#'+parentElement.id );\n\t\tfor (var c = 0; c \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils.ts\n        \n\n            \n                Description\n            \n            \n                Class that provides several utility functions to the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                compareNodes\n                            \n                            \n                                    Static\n                                count\n                            \n                            \n                                    Static\n                                hsv2rgb\n                            \n                            \n                                    Static\n                                parsePhylogramTree\n                            \n                            \n                                    Static\n                                rotate\n                            \n                            \n                                    Static\n                                rsplit\n                            \n                            \n                                    Static\n                                scale\n                            \n                            \n                                    Static\n                                splitIntoChildren\n                            \n                            \n                                    Static\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareNodes(a: any, b: any, property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:23\n                            \n                        \n\n\n                \n                    \n                            Compare two nodes, based on the given property, and indicates whether the\nfirst is lesser, greater or equal to the second one.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The first node in the comparison\n\n                                                        \n                                                \n                                                \n                                                        b\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The second node in the comparison\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The particular data field that will be used to\ncompare the first and second node\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    A number that indicates if the first node is lesser that\nthe second: -1; greater: 1; or equal: 0.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            count\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        count(st: string, char: string, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:42\n                            \n                        \n\n\n                \n                    \n                            Count the number of times a particular character appears in a given string.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The string where we will look for the character\n\n                                                        \n                                                \n                                                \n                                                        char\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The character we are searching for\n\n                                                        \n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                        \n                                                                The position in the string st from where we should\nstart counting. By default, we start from the beginning of the string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    A value that indicates the number of times char appears\nin st, starting from position start\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hsv2rgb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hsv2rgb(h: number, s: number, v: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:61\n                            \n                        \n\n\n                \n                    \n                            Given a color, expressed as an HSV tuple, return the same color expressed\nas an HTML RGB color.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        h\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The hue of the color\n\n                                                        \n                                                \n                                                \n                                                        s\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The saturation of the color, in the range [0,1]\n\n                                                        \n                                                \n                                                \n                                                        v\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The value of the color, in the range [0,1]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    An html rgb representation of the input color, i.e. a\nstring that follows the convention #RRGGBB\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            parsePhylogramTree\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parsePhylogramTree(dendrogram: string, id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:135\n                            \n                        \n\n\n                \n                    \n                            In order to use the application, the user needs to load Dendrogram\nstructures from text files written in the Newick (or New Hampshire) format,\nsuch as the ones provided by the phylogram package in R. However, in order\nto use d3's hierarchical properties, we need to parse this text into an\nobject with a JSON-like structure.\nWe define an \"empty\" root node for the Dendrogram, and then recursively\ntraverse the text file, searching for children and adding them to the\nstructure.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dendrogram\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The contents of the text file used as input for\nthe loadDendrogram routine\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A string that represents the position of the current\nnode within the overall dendrogram structure\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    A reference to the root of the loaded Dendrogram\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rotate(p: number[], rad: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:182\n                            \n                        \n\n\n                \n                    \n                            Rotate a two-dimensional point, expressed as an  X,Y coordinate pair,\naround Z-axis\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        p\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The point, in two-dimensinoal space, to be rotated\n\n                                                        \n                                                \n                                                \n                                                        rad\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The rotation angle, expressed in radians\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The rotated point, as a two coordinate array\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            rsplit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rsplit(st: string, sep: string, maxsplit: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:198\n                            \n                        \n\n\n                \n                    \n                            Split an input string into components, starting from the right-most\nappearance of the separator\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The input string\n\n                                                        \n                                                \n                                                \n                                                        sep\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The string used as separator\n\n                                                        \n                                                \n                                                \n                                                        maxsplit\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The maximum number of components into which the\ninput string is to be splitted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    An array containing the splitted parts\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            scale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        scale(p: number[], s: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:213\n                            \n                        \n\n\n                \n                    \n                            Scale a two-dimensional point, expressed as an X, Y coordinate pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        p\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The point, in two-dimensional space, to be scaled\n\n                                                        \n                                                \n                                                \n                                                        s\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A two-dimensional vector with the scale factors for X\nand Y\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The scaled point, as a two coordinate array\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            splitIntoChildren\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        splitIntoChildren(rawTex: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:258\n                            \n                        \n\n\n                \n                    \n                            The Newick encodes each node whithin the hierarchy as a comma separated,\nkey-value array with the following structure:\n[  or  :  , ...]\nIf the key is a name, then the current node is a leaf, otherwise, the key\nrepresent a list of children for the current node.\nThe value component represents the distance measured from the current node\nto its parent node.\nA sample string representing a dendrogram is as follows:\n'ADX.x2':0.52,('ADX.x1':0.36,'ADX.x3':0.36):0.16\nWhich graphically, we could interpret as:\n       0.52\n  |--------------- leaf ADX.x2\n  |         0.36\nroot      |------- leaf ADX.x1\n  | 0.16  |\n  |------node\n          |  0.36\n          |------- leaf ADX.x3Clearly from the example, only leaf nodes have a name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rawTex\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    An array of strings, where each item represents a child\nof the current node. In our example, the return list will have two items:\n'ADX.x2':0.5301862\n('ADX.x1':0.3647867,'ADX.x3':0.3647867):0.165399\nNotice that the second child is an internal node of the overall dendrogram\nstructure.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        translate(p: number[], t: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils.ts:315\n                            \n                        \n\n\n                \n                    \n                            Translate a two-dimensional point, expressed as an X, Y coordinate pair.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        p\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The point, in two-dimensinoal space, to be translated\n\n                                                        \n                                                \n                                                \n                                                        t\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The translation vector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number[]\n\n                            \n                                \n                                    The translated point, as a two coordinate array\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as jsPDF from 'jspdf';\nimport * as d3 from 'd3';\n\nimport { saveAs } from 'file-saver';\n\n/**\n * Class that provides several utility functions to the application.\n */\nexport class Utils{\n\n  /**\n   * Compare two nodes, based on the given property, and indicates whether the\n   * first is lesser, greater or equal to the second one.\n   *\n   * @param {node} a The first node in the comparison\n   * @param {node} b The second node in the comparison\n   * @param {string} property The particular data field that will be used to\n   * compare the first and second node\n   *\n   * @returns {number} A number that indicates if the first node is lesser that\n   * the second: -1; greater: 1; or equal: 0.\n   */\n  public static compareNodes(a: any, b: any, property: string): number{\n    if( a.data[property]  b.data[property] )\n      return 1;\n    return 0;\n  }\n\n  /**\n   * Count the number of times a particular character appears in a given string.\n   *\n   * @param {string} st The string where we will look for the character\n   * @param {string} char The character we are searching for\n   * @param {number} start The position in the string st from where we should\n   * start counting. By default, we start from the beginning of the string\n\n   * @returns {number} A value that indicates the number of times char appears\n   * in st, starting from position start\n   */\n  public static count(st: string, char:string, start: number =0): number{\n    var c:number = 0;\n    for(var i:number =start; i 1 ) s = 1;\n    if( v > 1 ) v = 1;\n    /* storage for the color representation in RGB color space */\n    var r: number = 0.0;\n    var g: number = 0.0;\n    var b: number = 0.0;\n\n    var f, p, q, t;\n    var k;\n    if (s === 0.0) {    // achromatic case\n      r = g = b = v;\n    }\n    else {    // chromatic case\n      if (h === 360.0) h=0.0;\n      h = h/60.0;\n      k = Math.round(h);\n      f = h - (k*1.0);\n\n      p = v * (1.0 - s);\n      q = v * (1.0 - (f*s));\n      t = v * (1.0 - ((1.0 - f)*s));\n\n      switch (k) {\n        case 0:\n          r = v;  g = t;  b = p;\n          break;\n        case 1:\n          r = q;  g = v;  b =  p;\n          break;\n        case 2:\n          r = p;  g = v;  b =  t;\n          break;\n        case 3:\n          r = p;  g = q;  b =  v;\n          break;\n        case 4:\n          r = t;  g = p;  b =  v;\n          break;\n        case 5:\n          r = v;  g = p;  b =  q;\n          break;\n      }\n    }\n\n    r = Math.trunc(r*255);\n    var rr: string = (\"00\" + r.toString(16)).slice(-2);\n    g = Math.trunc(g*255);\n    var gg: string = (\"00\" + g.toString(16)).slice(-2);\n    b = Math.trunc(b*255);\n    var bb: string = (\"00\" + b.toString(16)).slice(-2);\n    return \"#\"+rr+gg+bb;\n  }\n\n\n  /**\n   * In order to use the application, the user needs to load Dendrogram\n   * structures from text files written in the Newick (or New Hampshire) format,\n   * such as the ones provided by the phylogram package in R. However, in order\n   * to use d3's hierarchical properties, we need to parse this text into an\n   * object with a JSON-like structure.\n   *\n   * We define an \"empty\" root node for the Dendrogram, and then recursively\n   * traverse the text file, searching for children and adding them to the\n   * structure.\n   *\n   * @param {string} dendrogram The contents of the text file used as input for\n   * the loadDendrogram routine\n   * @param {string} id A string that represents the position of the current\n   * node within the overall dendrogram structure\n   *\n   * @returns {object} A reference to the root of the loaded Dendrogram\n   */\n  public static parsePhylogramTree(dendrogram: string, id: string): any{\n    // the current node is always an empty object (there is no data associated\n    // to it) with an empty list of children\n    var root: any = {};\n    root[\"children\"] = [];\n\n    // given a text representing a dendrogram structure, we identify the nodes\n    // that represent a child of the current node in the structure\n    var children: string[] = Utils.splitIntoChildren(dendrogram);\n\n    // and we add them to the current structure\n    for (var i: number=0; i or  :  , ...]\n   *\n   *If the key is a name, then the current node is a leaf, otherwise, the key\n   * represent a list of children for the current node.\n   *\n   * The value component represents the distance measured from the current node\n   * to its parent node.\n   *\n   * A sample string representing a dendrogram is as follows:\n   *\n   * 'ADX.x2':0.52,('ADX.x1':0.36,'ADX.x3':0.36):0.16\n   *\n   * Which graphically, we could interpret as:\n   ```\n           0.52\n      |--------------- leaf ADX.x2\n      |         0.36\n     root      |------- leaf ADX.x1\n      | 0.16  |\n      |------node\n              |  0.36\n              |------- leaf ADX.x3\n   ```\n   *\n   * Clearly from the example, only leaf nodes have a name.\n   *\n   * @param {string} rawText The text that represents the dendrogram rooted at\n   * the current node.\n   *\n   * @returns {string[]} An array of strings, where each item represents a child\n   * of the current node. In our example, the return list will have two items:\n   * 'ADX.x2':0.5301862\n   * ('ADX.x1':0.3647867,'ADX.x3':0.3647867):0.165399\n   *\n   * Notice that the second child is an internal node of the overall dendrogram\n   * structure.\n   */\n  public static splitIntoChildren(rawTex: string): string[]{\n    // initially, the list of nodes to return is empty\n    var components: string[] = [];\n    // the list of the current node's children is a comma separated string, thus\n    // counting them gives an upper bound for the number of children the current\n    // node potentially has\n    var commas:number = Utils.count(rawTex, \",\");\n    // we will traverse the word, thus we need to keep track of the index within\n    // the rawTex where we currently stand\n    var previousIndex:number = 0;\n\n    // for each comma in the rawText, we need to decide if its being used to\n    // separate childrens of the current node, or other descendats further down\n    // the hierarchy\n    while( commas > 0 ){\n      // the index within the rawText of the next comma to inspect, if none is\n      // found, then simply the end of the string\n      var currentIndex:number = rawTex.indexOf(',', previousIndex+1);\n      if( currentIndex === -1 ){\n        currentIndex = rawTex.length;\n      }\n      previousIndex = currentIndex;\n\n      // between comma characters, the text will represent a child for the\n      // current node only if there is an equal number of open and close\n      // brackets (an uneven number means we are standing in a comma within a\n      // lower level of the structure). We use this number to identify all\n      // children\n      var leftBrack: number = Utils.count(rawTex.substring(0,currentIndex),'(');\n      var rightBrack:number = Utils.count(rawTex.substring(0,currentIndex),')');\n      // if we identify a child (for leaf nodes, left and right brackets are 0)\n      if( leftBrack === rightBrack ){\n        // we add the corresponding text to the list of children\n        components.push(rawTex.substring(0, currentIndex));\n        // we remove the partial string from the remainder of the dendrogram\n        rawTex = rawTex.substring(currentIndex+1);\n        // we initialize the index to search for the next comma character\n        previousIndex = 0;\n      }\n      // we have one less comma character to process\n      commas -= 1;\n    }\n    // if there is any text left, we add it as a child\n    if( rawTex !== \"\" )\n      components.push(rawTex);\n\n    return components;\n  }\n\n  /**\n   * Translate a two-dimensional point, expressed as an X, Y coordinate pair.\n   *\n   * @param {number[]} p The point, in two-dimensinoal space, to be translated\n   * @param {number[]} t The translation vector\n   *\n   * @returns {number[]} The translated point, as a two coordinate array\n   */\n  static translate(p:number[], t: number[]): number[]{\n    return [ p[0]+t[0], p[1]+t[1] ];\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    src/app/canvas/canvas.component.ts\n            \n            \n                component\n            \n            \n                CanvasComponent\n            \n            \n                94 %\n                (34/36)\n            \n        \n        \n            \n                \n                    src/app/clusterMatch.ts\n            \n            \n                class\n            \n            \n                ClusterMatch\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    src/app/dendrogram.ts\n            \n            \n                class\n            \n            \n                Dendrogram\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    src/app/extras.ts\n            \n            \n                class\n            \n            \n                Extras\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/app/interface/interface.component.ts\n            \n            \n                component\n            \n            \n                InterfaceComponent\n            \n            \n                97 %\n                (36/37)\n            \n        \n        \n            \n                \n                    src/app/utils.ts\n            \n            \n                class\n            \n            \n                Utils\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.0\n        \n            @angular/cdk : ^8.1.2\n        \n            @angular/common : ^8.0.0\n        \n            @angular/compiler : ^8.0.0\n        \n            @angular/core : ^8.0.0\n        \n            @angular/forms : ^8.0.0\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^8.1.2\n        \n            @angular/platform-browser : ^8.0.0\n        \n            @angular/platform-browser-dynamic : ^8.0.0\n        \n            @angular/router : ^8.0.0\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.4.0\n        \n            d3-scale-chromatic : ^1.3.0\n        \n            file-saver : ^1.3.8\n        \n            jspdf : ^1.4.1\n        \n            npm : ^6.10.2\n        \n            rxjs : ^6.5.2\n        \n            rxjs-tslint : ^0.1.7\n        \n            zone.js : ^0.9.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ClusterMatchEnum   (src/.../clusterMatchType.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/clusterMatchType.ts\n    \n        \n            \n                \n                    \n                        \n                        ClusterMatchEnum\n                    \n                \n                    \n                        \n                            In a biological setting, we usually are interested on identifying tree\nstructures (clusters) that are not necesarily identical. Here we define a\nseries of different levels of similarity we want to recognise between the\nstructures being compared.\nKeep in mind that at all times, we are considering the comparison of nodes\nwithin a tree-like structure (a Dendrogram).\nISOMORPHIC\ntwo trees are isomorphic if one can be obtained from the other simply by\nperforming a series of flips on its branches. The sub-graph components of\neach tree, as well as their overall structure (links) is retained on both\nstructures\nBIOISOMORPHIC\nREARRANGED\nCONTAINED\nwe define a tree to be contained by a second tree if the\n\n                        \n                    \n                        \n                            \n                                 BIOISOMORPHIC\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 REARRANGED\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 CONTAINED\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCLINE\nThis project was generated with Angular CLI version 6.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2019 The Mizuguchi Laboratory\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCanvasComponent\n\nCanvasComponent\n\nAppModule -->\n\nCanvasComponent->AppModule\n\n\n\n\n\nInterfaceComponent\n\nInterfaceComponent\n\nAppModule -->\n\nInterfaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
